# Generated by Django 2.0.7 on 2018-07-27 16:44

import daiseihai.archive.models
import daiseihai.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Matchup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(unique=True)),
                ('main_color', daiseihai.fields.ColorField(default='#000000')),
                ('secondary_color', daiseihai.fields.ColorField(default='#ffffff')),
                ('long_name', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('logo', models.ImageField(upload_to=daiseihai.archive.models._get_tournament_logo_path)),
            ],
            options={
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('filename', models.CharField(blank=True, max_length=200, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('is_visible', models.BooleanField(default=True)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='videos', to='archive.Tournament')),
            ],
            options={
                'ordering': ('date', 'order'),
            },
        ),
        migrations.CreateModel(
            name='VideoBookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.DurationField()),
                ('name', models.CharField(max_length=200)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='archive.Video')),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.AddField(
            model_name='matchup',
            name='away',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='archive.Team'),
        ),
        migrations.AddField(
            model_name='matchup',
            name='home',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='archive.Team'),
        ),
        migrations.AddField(
            model_name='matchup',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matchups', to='archive.Video'),
        ),
        migrations.AlterUniqueTogether(
            name='video',
            unique_together={('date', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='matchup',
            unique_together={('video', 'home', 'away'), ('video', 'order')},
        ),
    ]
